@*Developed By:- Dulanjalee Wickremasinghe
    Developed On:- 2022/08/31*@

@{
    ViewBag.Title = "ManagePaymentRate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-2 mb-0">
    <div class="col-12">
        <ol class="breadcrumb ml-2 mr-2 pt-2 pb-0 mb-2">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "SA")">Home</a></li>
            <li class="breadcrumb-item active">Manage Payment Rate</li>
        </ol>
    </div>
</div>
<hr class="ml-2 mr-2 mt-0 mb-2" />
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Manage Payment Rate</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Payment Rate</h6>
        </div>
        <div class="card-body">
            <button type="button" class="btn btn-outline-success btn-sm mb-3" onclick="NavigatePaymentRateForm('@Url.Action("AddOrEditPaymentRate", "SA")', 'Add')"><i class="fa fa-plus"></i> Add New</button>
            <button type="button" class="btn btn-sm btn-outline-primary float-right" onclick="onSendToApprovalClick()"><i class="fa fa-arrow-right"></i> Send To Approval</button>
            <button type="button" class="btn btn-sm btn-outline-success float-right mr-2" onclick="onApproveClick()"><i class="fa fa-check"></i> Approve</button>
            <button type="button" class="btn btn-sm btn-outline-danger float-right mr-2" onclick="onRejectClick()"><i class="fa fa-times"></i> Reject</button>
            <button type="button" class="btn btn-sm btn-outline-primary float-right mr-2" onclick="OpenWorkflowMap('@Url.Action("ViewSubWorkFlowMap", "SA")')"><i class="fa fa-eye"></i> Color Coding Desctription</button>
            <div class="table-responsive">
                <table id="paymentRateTbl" class="table table-bordered data-table nowrap" style="width: 100%;"></table>
            </div>
        </div>
    </div>
    <div class="modal fade" id="sendToApprovalModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Send To Approval Confirmation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-labelledby="close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want send selected payment rates to approval?</p>
                    <p class="text-danger">This action cannot be undone once you click on 'Yes, Send'!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-dismiss="modal">No</button>
                    <button type="button" class="btn btn-primary" onclick="SendToApprovalConfirm()">Yes, Send</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="paymentRateApprovalModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Payment Rate(s) Approval Confirmation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-labelledby="close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want approve selected payment rate(s)?</p>
                    <p class="text-danger">This action cannot be undone once you click on 'Yes, Approve'!</p>
                    <form>
                        <div class="form-group row">
                            <div class="col-sm-2">
                                <label>Remark: </label>
                            </div>
                            <div class="col-sm-9">
                                <input class="form-control" id="approvalRemark" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-dismiss="modal">No</button>
                    <button type="button" class="btn btn-primary" onclick="PaymentRateApprovalConfirm()">Yes, Approve</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="paymentRateRejectModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Payment Rate(s) Rejection Confirmation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-labelledby="close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want reject selected payment rate(s)?</p>
                    <p class="text-danger">This action cannot be undone once you click on 'Yes, Reject'!</p>
                    <form>
                        <div class="form-group row">
                            <div class="col-sm-2">
                                <label>Remark: </label>
                            </div>
                            <div class="col-sm-9">
                                <input class="form-control" id="rejectionRemark" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-dismiss="modal">No</button>
                    <button type="button" class="btn btn-danger" onclick="PaymentRateRejectConfirm()">Yes, Reject</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var paymentRateTbl;
        var selectedCLRecordsList = [];
        var downloadFileName = "Payment Rates"

        paymentRateTbl = $("#paymentRateTbl").DataTable({
            "dom": "<'row'<'col-12 col-xs-6 col-sm-6 col-xs-12 col-md-3 col-lg-3 col-xl-3'l><'col-12 col-xs-6 col-sm-6 col-xs-12 col-md-4 col-lg-4 col-xl-4'B><'col-12 col-xs-6 col-sm-6 col-xs-12 col-md-5 col-lg-5 col-xl-5'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-5'i><'col-sm-7'p>>",
            "buttons": {
                "buttons": [
                    {
                        extend: 'csv',
                        text: '<i class="fa fa-download"></i> CSV Download',
                        title: downloadFileName,
                        className: 'btn btn-sm btn-outline-success'
                    },
                    {
                        extend: 'excel',
                        text: '<i class="fa fa-download"></i> Excel Download',
                        title: downloadFileName,
                        className: 'btn btn-sm btn-outline-success'
                    },
                    {
                        extend: 'print',
                        text: '<i class="fa fa-print"></i> Print',
                        title: downloadFileName,
                        className: 'btn btn-sm btn-outline-success'
                    }
                ],
                "dom": {
                    "button": {
                        className: 'btn'
                    }
                }
            },
            "responsive": true,
            "scrollY": "30vh",
            "scrollX": true,
            "scroller": true,
            "order": [],
            "ajax": {
                "url": "@Url.Action("GetPaymentRates", "SA")",
                "type": "GET",
                "dataType": "json"
            },
            "createdRow": function (row, data, dataIndex) {
                if (data.IsApproved == null) {
                    $(row).addClass("pendingRow");
                }
            },
            "columns": [
                {
                    "data": null,
                    "defaultContent": ''
                },
                {
                    "title": "",
                    "data": "Id",
                    "render": function (data) {
                        return `<div class='dropdown dropright'>`
                                + `<a class='btn btn-sm' href='#' role='button' id='dropdownMenuLink' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'>`
                                + `<i class='fa fa-ellipsis-v' aria-hidden='true'></i></a>`
                                + `<div class='dropdown-menu' aria-labelledby='dropdownMenuLink'>`
                            + `<a class='dropdown-item btn' onclick="NavigatePaymentRateForm('@Url.Action("AddOrEditPaymentRate", "SA")/` + data + `', 'View')">View Payment Rate</a>`
                            + `<a class='dropdown-item btn' onclick="NavigatePaymentRateForm('@Url.Action("AddOrEditPaymentRate", "SA")/` + data + `', 'Edit')">Edit Payment Rate</a></div></div>`
                    },
                    "orderable": false,
                    "searchable": false,
                    "width": "20px"
                },
                {
                    "title": "Designation",
                    "data": "DesignationName",
                    "render": function (data) {
                        if (data == null) {
                            return "N/A";
                        }
                        else {
                            return data;
                        }
                    }
                },
                {
                    "title": "Lecture Type",
                    "data": "LectureTypeName",
                    "render": function (data) {
                        if (data == null) {
                            return "N/A";
                        }
                        else {
                            return data;
                        }
                    }
                },
                {
                    "title": "Faculty",
                    "data": "FacultyName",
                    "render": function (data) {
                        if (data == null) {
                            return "N/A";
                        }
                        else {
                            return data;
                        }
                    }
                },
                {
                    "title": "Approved Rate Per Hour (Rs.)",
                    "data": "CurrentRatePerHour",
                    "render": function (data) {
                        if (data == null) {
                            return "N/A";
                        }
                        else {
                            return parseFloat(data).toFixed(2);
                        }
                    }
                },
                {
                    "title": "Degree",
                    "data": "DegreeName",
                    "render": function (data) {
                        if (data == null) {
                            return "N/A";
                        }
                        else {
                            return data;
                        }
                    }
                },
                {
                    "title": "Specialization",
                    "data": "SpecializationName",
                    "render": function (data) {
                        if (data == null) {
                            return "N/A";
                        }
                        else {
                            return data;
                        }
                    }
                },
                {
                    "title": "Subject",
                    "data": "SubjectName",
                    "render": function (data) {
                        if (data == null) {
                            return "N/A";
                        }
                        else {
                            return data;
                        }
                    }
                },
                {
                    "title": "Old Rate Per Hour (Rs.)",
                    "data": "OldRatePerHour",
                    "render": function (data) {
                        if (data == null) {
                            return "N/A";
                        }
                        else {
                            return parseFloat(data).toFixed(2);
                        }
                    }
                },
                {
                    "title": "Approval Status",
                    "data": null,
                    "render": function (data) {
                        if (data.SentForApproval == true) {
                            return 'Sent For Approval';
                        }
                        else {
                            if (data.IsApproved == true) {
                                return 'Approved';
                            }
                            else if (data.IsApproved == false) {
                                return 'Rejected';
                            }
                            else {
                                return 'Not Sent For Approval'
                            }
                        }
                    }
                },
                {
                    "title": "Approval / Rejection Remark",
                    "data": "ApprovalOrRejectionRemark",
                    "render": function (data) {
                        if (data == null) {
                            return "N/A";
                        }
                        else {
                            return data;
                        }
                    }
                },
                {
                    "title": "Status",
                    "data": "IsActive",
                    "render": function (data) {
                        if (data == true) {
                            return 'Active';
                        }
                        else {
                            return 'Inactive';
                        }
                    }
                }
            ],
            "columnDefs": [
                {
                    "orderable": false,
                    "className": 'select-checkbox',
                    "targets": 0,
                }
            ],
            "select": {
                "style": 'multi',
                "selector": 'td:first-child'
            },
            "language": {
                "emptyTable": "No Payment Rates Found!"
            }
        })

        function NavigatePaymentRateForm(url, action) {
            if (action == "Add") {
                window.location.href = url;
            }
            else if (action == "Edit") {
                window.location.href = url + "/Edit";
            }
            else {
                window.location.href = url + "/View";
            }
        }

        function onSendToApprovalClick() {
            selectedCLRecordsList = [];
            var allselectedRows = paymentRateTbl.rows('.selected').data();

            if (allselectedRows.length != 0) {
                for (var i = 0; i < allselectedRows.length; i++) {
                    selectedCLRecordsList.push(allselectedRows[i].Id);
                }
            }

            if (selectedCLRecordsList.length != 0) {
                $("#sendToApprovalModal").modal("show");
            }
            else {
                alert("You must choose one or more payment rates before sending to approval");
            }
        }

        function SendToApprovalConfirm() {
            $("#loader").show();

            var paymentRateObj = {
                PaymentRateIdList: selectedCLRecordsList
            };

            $.ajax({
                type: "POST",
                url: '@Url.Action("PaymentRateSendtoApproval", "SA")',
                data: paymentRateObj,
                success: function (data) {
                    $("#loader").hide();
                    if (data.success) {
                        $("#sendToApprovalModal").modal("hide");
                        paymentRateTbl.ajax.reload();
                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "success"
                        });

                        $.ajax({
                            type: "GET",
                            url: '@Url.Action("SendPaymentRateEmails", "SA")',
                            success: function (data) {

                            }
                        });
                    }
                    else {
                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "error"
                        })
                    }
                }
            });
        }

        function onApproveClick() {
            selectedCLRecordsList = [];
            var allselectedRows = paymentRateTbl.rows('.selected').data();

            if (allselectedRows.length != 0) {
                for (var i = 0; i < allselectedRows.length; i++) {
                    selectedCLRecordsList.push(allselectedRows[i].Id);
                }
            }

            if (selectedCLRecordsList.length != 0) {
                $("#paymentRateApprovalModal").modal("show");
            }
            else {
                alert("You must choose one or more payment rates to approve");
            }
        }

        function PaymentRateApprovalConfirm() {
            $("#loader").show();

            var paymentRateObj = {
                PaymentRateIdList: selectedCLRecordsList,
                Remark: $("#approvalRemark").val()
            };

            $.ajax({
                type: "POST",
                url: '@Url.Action("ApprovePaymentRates", "SA")',
                data: paymentRateObj,
                success: function (data) {
                    $("#loader").hide();
                    if (data.success) {
                        $("#paymentRateApprovalModal").modal("hide");
                        paymentRateTbl.ajax.reload();
                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "success"
                        });

                        $.ajax({
                            type: "GET",
                            url: '@Url.Action("SendPaymentRateEmails", "SA")',
                            success: function (data) {

                            }
                        });
                    }
                    else {
                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "error"
                        })
                    }
                }
            });
        }

        function onRejectClick() {
            selectedCLRecordsList = [];
            var allselectedRows = paymentRateTbl.rows('.selected').data();

            if (allselectedRows.length != 0) {
                for (var i = 0; i < allselectedRows.length; i++) {
                    selectedCLRecordsList.push(allselectedRows[i].Id);
                }
            }

            if (selectedCLRecordsList.length != 0) {
                $("#paymentRateRejectModal").modal("show");
            }
            else {
                alert("You must choose one or more payment rates to reject");
            }
        }

        function PaymentRateRejectConfirm() {
            $("#loader").show();

            var paymentRateObj = {
                PaymentRateIdList: selectedCLRecordsList,
                Remark: $("#rejectionRemark").val()
            };

            $.ajax({
                type: "POST",
                url: '@Url.Action("RejectPaymentRates", "SA")',
                data: paymentRateObj,
                success: function (data) {
                    $("#loader").hide();
                    if (data.success) {
                        $("#paymentRateRejectModal").modal("hide");
                        paymentRateTbl.ajax.reload();
                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "success"
                        });

                        $.ajax({
                            type: "GET",
                            url: '@Url.Action("SendPaymentRateEmails", "SA")',
                            success: function (data) {

                            }
                        });
                    }
                    else {
                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "error"
                        })
                    }
                }
            });
        }
    </script>
}