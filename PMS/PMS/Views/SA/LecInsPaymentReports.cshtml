@*Developed By:- Ranga Athapaththu
    Developed On:- 2022/11/14*@

@model PMS.Custom_Classes.ReportsCC

@{
    ViewBag.Title = "LecInsPaymentReports";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-2 mb-0">
    <div class="col-12">
        <ol class="breadcrumb ml-2 mr-2 pt-2 pb-0 mb-2">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "SA")">Home</a></li>
            <li class="breadcrumb-item active">Lecturer - Instructor Payment Reports</li>
        </ol>
    </div>
</div>
<hr class="ml-2 mr-2 mt-0 mb-2" />
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Lecturer - Instructor Payment Reports</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Lecturer - Instructor Payment Reports</h6>
        </div>
        <div class="card-body">
            @*@if (PMS.Custom_Classes.CustomExtensions.IsAuthenticated(User.Identity.GetUserName(), new string[] { "/SA/AddOrEditInstitute/Add" }))
        {
            <button type="button" class="btn btn-outline-success btn-sm mb-3" onclick="NavigateInstituteForm('@Url.Action("AddOrEditInstitute", "SA")', 'Add')"><i class="fa fa-plus"></i> Add New</button>
        }*@
            <nav>
                <div class="nav nav-tabs pt-3" id="nav-tab" role="tablist">
                    <a class="nav-item nav-link active" id="nav-lecInsWise-tab" data-toggle="tab" href="#nav-lecInsWise" role="tab" aria-controls="nav-lecInsWise" aria-selected="true">Lecturer / Instrctor Wise Report</a>
                    <a class="nav-item nav-link" id="nav-employmentTypeWise-tab" data-toggle="tab" href="#nav-employmentTypeWise" role="tab" aria-controls="nav-employmentTypeWise" aria-selected="true">Employment Type Wise Report</a>
                </div>
            </nav>
            <div class="tab-content" id="nav-tabContent">
                <div class="tab-pane fade show active pt-2" id="nav-lecInsWise" role="tabpanel" aria-labelledby="nav-lecInsWise-tab">
                    @using (Html.BeginForm("GetLecInsPaymentReports", "SA", FormMethod.Post, new { onsubmit = "return SubmitLecInsPaymentReportsForm(this)", @id = "lecInsPaymentReportForm", autocomplete = "off" }))
                    {
                        <div class="form-group row">
                            <div class="col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-3">
                                @Html.DropDownListFor(model => model.LecturerId, (IEnumerable<SelectListItem>)ViewBag.usersList, new { @class = "form-control", @id = "usersList" })
                                @Html.ValidationMessageFor(model => model.LecturerId)
                            </div>
                            <div class="col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-3 repFormInputs">
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @id = "lecInsPaymentReportStartDate", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.StartDate)
                            </div>
                            <div class="col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-3 repFormInputs">
                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @id = "lecInsPaymentReportEndDate", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.EndDate)
                            </div>
                            <div class="col-12 col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-3 repFormInputs">
                                <button class="btn btn-primary" type="submit" id="generateReportBtn">Generate Report</button>
                                <button class="btn btn-light ml-2" type="button" id="clearBtn" onclick="clearLecInsPaymentReportForm()">Clear</button>
                            </div>
                        </div>
                    }
                    <div class="table-responsive">
                        <table id="lecInsPaymentReportsTbl" class="table table-bordered data-table nowrap" style="width: 100%;"></table>
                    </div>
                </div>
                <div class="tab-pane fade pt-2" id="nav-employmentTypeWise" role="tabpanel" aria-labelledby="nav-employmentTypeWise-tab">
                    @using (Html.BeginForm("GetLecInsPaymentReports", "SA", FormMethod.Post, new { onsubmit = "return SubmitEmployementTypeReportForm(this)", @class = "pt-2", @id = "employmentTypeReportForm", autocomplete = "off" }))
                    {
                        <div class="form-group row">
                            <div class="col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-3">
                                @Html.DropDownListFor(model => model.AppointmentTypeId, (IEnumerable<SelectListItem>)ViewBag.appointmentTypeList, new { @class = "form-control", @id = "appointmentTypeList" })
                                @Html.ValidationMessageFor(model => model.AppointmentTypeId)
                            </div>
                            <div class="col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-3 repFormInputs">
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @id = "employmentWiseReportStartDate", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.StartDate)
                            </div>
                            <div class="col-12 col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-3 repFormInputs">
                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @id = "employmentWiseReportEndDate", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.EndDate)
                            </div>
                            <div class="col-12 col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-3 repFormInputs">
                                <button class="btn btn-primary" type="submit" id="generateReportBtn">Generate Report</button>
                                <button class="btn btn-light ml-2" type="button" id="clearBtn" onclick="clearEmploymentWiseReportForm()">Clear</button>
                            </div>
                        </div>
                    }
                    <div class="table-responsive">
                        <table id="employmentWiseReportsTbl" class="table table-bordered data-table nowrap" style="width: 100%;"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var lecInsPaymentReportsTbl, employmentWiseReportsTbl;
        var lecInsPaymentReportsTableInitiated = false;
        var employmentWiseReportTableInitiated = false;
        var postSearchParameters = null;

        $(function () {
            $("#usersList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Lecturer / Instructor --"
                }
            });

            $("#appointmentTypeList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Employment Type --"
                }
            });
        });

        $(document).ready(function () {
            $("#usersList").val(null).change();
            $("#appointmentTypeList").val(null).change();
        })

        function SubmitLecInsPaymentReportsForm(form) {
            $(form).removeData("validator");
            $(form).removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);

            var isValid = false;

            if ($(form).valid()) {
                var lecInsPaymentReportStartDate = new Date($("#lecInsPaymentReportStartDate").val());
                var lecInsPaymentReportEndDate = new Date($("#lecInsPaymentReportEndDate").val());

                if (lecInsPaymentReportStartDate > lecInsPaymentReportEndDate) {
                    isValid = false;
                    alert("Start Date should be greater than or equal to End Date");
                }
                else {
                    isValid = true;
                }

                if (isValid == true) {
                    postSearchParameters = {
                        LecturerId: $("#usersList :selected").val(),
                        StartDate: $("#lecInsPaymentReportStartDate").val(),
                        EndDate: $("#lecInsPaymentReportEndDate").val(),
                        SelectedTable: "Employee Wise"
                    }
                    onLecInsPaymentReportView();
                }
            }
            return false;
        }

        function clearLecInsPaymentReportForm() {
            $("#lecInsPaymentReportForm").find("input").val("");
            $("#usersList").val(null).change();
        }

        function SubmitEmployementTypeReportForm(form) {
            $(form).removeData("validator");
            $(form).removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);

            var isValid = false;

            if ($(form).valid()) {
                var employmentWiseReportStartDate = new Date($("#employmentWiseReportStartDate").val());
                var employmentWiseReportEndDate = new Date($("#employmentWiseReportEndDate").val());

                if (employmentWiseReportStartDate > employmentWiseReportEndDate) {
                    isValid = false;
                    alert("Start Date should be greater than or equal to End Date");
                }
                else {
                    isValid = true;
                }

                if (isValid == true) {
                    postSearchParameters = {
                        AppointmentTypeId: $("#appointmentTypeList :selected").val(),
                        StartDate: $("#employmentWiseReportStartDate").val(),
                        EndDate: $("#employmentWiseReportEndDate").val(),
                        SelectedTable: "Employment Type Wise"
                    }
                    onEmploymentTypeWiseReportView();
                }
            }
            return false;
        }

        function clearEmploymentWiseReportForm() {
            $("#employmentTypeReportForm").find("input").val("");
            $("#appointmentTypeList").val(null).change();
        }

        function onLecInsPaymentReportView() {
            if (lecInsPaymentReportsTableInitiated == true) {
                $("#lecInsPaymentReportsTbl").DataTable().destroy();
            }

            var downloadFileName = "";

            if (postSearchParameters.LecturerId != "All") {
                downloadFileName = "Lecturer - Instructor Payment Report for " + $("#usersList :selected").text() + " From " + $("#lecInsPaymentReportStartDate").val() + " To " + $("#lecInsPaymentReportEndDate").val();
            }
            else {
                downloadFileName = "Lecturer - Instructor Payment Report for All Lecturers - Instructors From " + $("#lecInsPaymentReportStartDate").val() + " To " + $("#lecInsPaymentReportEndDate").val();
            }

            lecInsPaymentReportsTbl = $("#lecInsPaymentReportsTbl").DataTable({
                "dom": "<'row'<'col-12 col-xs-6 col-sm-6 col-xs-12 col-md-3 col-lg-3 col-xl-3'l><'col-12 col-xs-6 col-sm-6 col-xs-12 col-md-4 col-lg-4 col-xl-4'B><'col-12 col-xs-6 col-sm-6 col-xs-12 col-md-5 col-lg-5 col-xl-5'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                "buttons": {
                    "buttons": [
                        {
                            extend: 'csv',
                            text: '<i class="fa fa-download"></i> CSV Download',
                            title: downloadFileName,
                            className: 'btn btn-sm btn-outline-success'
                        },
                        {
                            extend: 'excel',
                            text: '<i class="fa fa-download"></i> Excel Download',
                            title: downloadFileName,
                            className: 'btn btn-sm btn-outline-success'
                        },
                        {
                            extend: 'print',
                            text: '<i class="fa fa-print"></i> Print',
                            title: downloadFileName,
                            className: 'btn btn-sm btn-outline-success'
                        }
                    ],
                    "dom": {
                        "button": {
                            className: 'btn'
                        }
                    }
                },
                "scrollY": "30vh",
                "scrollX": true,
                "scroller": true,
                "order": [],
                "ajax": {
                    "url": "@Url.Action("GetLecInsPaymentReports", "SA")",
                    "type": "POST",
                    "data": postSearchParameters
                },
                "columns": [
                    {
                        "title": "Lecturer / Instructor",
                        "data": "timetableRecords.LecturerName"
                    },
                    {
                        "title": "Subject",
                        "data": "timetableRecords.SubjectName"
                    },
                    {
                        "title": "Lecture Type",
                        "data": "timetableRecords.LectureTypeName"
                    },
                    {
                        "title": "Payment Amount (Rs.)",
                        "data": "PaymentAmount",
                        "render": function (data) {
                            if (data == true) {
                                return "N/A";
                            }
                            else {
                                return parseFloat(data).toFixed(2);
                            }
                        }
                    },
                    {
                        "title": "Current Stage",
                        "data": "CurrentStageDisplayName",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Actual Lecture Date",
                        "data": "ActualLectureDate",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Actual Lecture Start Time (24 Hrs)",
                        "data": "ActualFromTime",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Actual Lecture End Time (24 Hrs)",
                        "data": "ActualToTime",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Timetable Lecture Date",
                        "data": "timetableRecords.LectureDate",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Timetable Lecture Start Time (24 Hrs)",
                        "data": "timetableRecords.FromTime",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Timetable Lecture End Time (24 Hrs)",
                        "data": "timetableRecords.ToTime",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Lecturer / Instructor Comment",
                        "data": "Comment",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Approval / Rejection Remark",
                        "data": "ApprovedOrRejectedRemark",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                ],
                "language": {
                    "emptyTable": "No Data Found!"
                }
            });

            if (postSearchParameters.LecturerId != "All") {
                lecInsPaymentReportsTbl.column(0).visible(false);
            }
            else {
                lecInsPaymentReportsTbl.column(0).visible(true);
            }

            lecInsPaymentReportsTbl.columns.adjust();
            lecInsPaymentReportsTableInitiated = true;
        }

        function onEmploymentTypeWiseReportView() {
            if (employmentWiseReportTableInitiated == true) {
                $("#employmentWiseReportsTbl").DataTable().destroy();
            }

            var downloadFileName = "";

            if (postSearchParameters.AppointmentTypeId != -1) {
                downloadFileName = "Employment Type Wise Payment Report for " + $("#appointmentTypeList :selected").text() + " From " + $("#employmentWiseReportStartDate").val() + " To " + $("#employmentWiseReportEndDate").val();
            }
            else {
                downloadFileName = "Employment Type Wise Payment Report for All Employment types From " + $("#employmentWiseReportStartDate").val() + " To " + $("#employmentWiseReportEndDate").val();
            }

            employmentWiseReportsTbl = $("#employmentWiseReportsTbl").DataTable({
                "dom": "<'row'<'col-12 col-xs-6 col-sm-6 col-xs-12 col-md-3 col-lg-3 col-xl-3'l><'col-12 col-xs-6 col-sm-6 col-xs-12 col-md-4 col-lg-4 col-xl-4'B><'col-12 col-xs-6 col-sm-6 col-xs-12 col-md-5 col-lg-5 col-xl-5'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                "buttons": {
                    "buttons": [
                        {
                            extend: 'csv',
                            text: '<i class="fa fa-download"></i> CSV Download',
                            title: downloadFileName,
                            className: 'btn btn-sm btn-outline-success'
                        },
                        {
                            extend: 'excel',
                            text: '<i class="fa fa-download"></i> Excel Download',
                            title: downloadFileName,
                            className: 'btn btn-sm btn-outline-success'
                        },
                        {
                            extend: 'print',
                            text: '<i class="fa fa-print"></i> Print',
                            title: downloadFileName,
                            className: 'btn btn-sm btn-outline-success'
                        }
                    ],
                    "dom": {
                        "button": {
                            className: 'btn'
                        }
                    }
                },
                "scrollY": "30vh",
                "scrollX": true,
                "scroller": true,
                "order": [],
                "ajax": {
                    "url": "@Url.Action("GetLecInsPaymentReports", "SA")",
                    "type": "POST",
                    "data": postSearchParameters
                },
                "columns": [
                    {
                        "title": "Employment Type",
                        "data": "timetableRecords.AppointmentTypeDetails.AppointmentTypeName",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Lecturer / Instructor",
                        "data": "timetableRecords.LecturerName"
                    },
                    {
                        "title": "Subject",
                        "data": "timetableRecords.SubjectName"
                    },
                    {
                        "title": "Lecture Type",
                        "data": "timetableRecords.LectureTypeName"
                    },
                    {
                        "title": "Payment Amount (Rs.)",
                        "data": "PaymentAmount",
                        "render": function (data) {
                            if (data == true) {
                                return "N/A";
                            }
                            else {
                                return parseFloat(data).toFixed(2);
                            }
                        }
                    },
                    {
                        "title": "Current Stage",
                        "data": "CurrentStageDisplayName",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Actual Lecture Date",
                        "data": "ActualLectureDate",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Actual Lecture Start Time (24 Hrs)",
                        "data": "ActualFromTime",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Actual Lecture End Time (24 Hrs)",
                        "data": "ActualToTime",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Timetable Lecture Date",
                        "data": "timetableRecords.LectureDate",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Timetable Lecture Start Time (24 Hrs)",
                        "data": "timetableRecords.FromTime",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Timetable Lecture End Time (24 Hrs)",
                        "data": "timetableRecords.ToTime",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Lecturer / Instructor Comment",
                        "data": "Comment",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "title": "Approval / Rejection Remark",
                        "data": "ApprovedOrRejectedRemark",
                        "render": function (data) {
                            if (data == null) {
                                return "N/A";
                            }
                            else {
                                return data;
                            }
                        }
                    },
                ],
                "language": {
                    "emptyTable": "No Data Found!"
                }
            });

            if (postSearchParameters.AppointmentTypeId != -1) {
                employmentWiseReportsTbl.column(0).visible(false);
            }
            else {
                employmentWiseReportsTbl.column(0).visible(true);
            }

            employmentWiseReportsTbl.columns.adjust();
            employmentWiseReportTableInitiated = true;
        }
    </script>
}