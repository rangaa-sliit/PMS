@*Developed By:- Dulanjalee Wickremasinghe
Developed On:- 2022/09/27*@

@model PMS.Custom_Classes.UserClaimCC

@{
    ViewBag.Title = "ManageUserClaims";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-2 mb-0">
    <div class="col-12">
        <ol class="breadcrumb ml-2 mr-2 pt-2 pb-0 mb-2">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "SA")">Home</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("ManageUsers", "SA")">Manage Users</a></li>
            <li class="breadcrumb-item active">Manage User Claims</li>
        </ol>
    </div>
</div>
<hr class="ml-2 mr-2 mt-0 mb-2" />
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Manage User Claims</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">User Claims</h6>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("AddOrEditUserClaim", "SA", FormMethod.Post, new { onsubmit = "return SubmitUserClaimForm(this)", @id = "userClaimForm", autocomplete = "off" }))
            {
                <div class="row">
                    <div class="col-4">
                        <label>Employee No: <span id="empNo" class="text-dark">@ViewBag.userData.EmployeeNumber</span></label>
                    </div>
                    <div class="col-8">
                        <label>Employee Name: <span id="empName" class="text-dark">@ViewBag.userData.EmployeeName</span></label>
                    </div>
                </div>
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.UserId)
                <div class="row mt-3">
                    <div class="col-4">
                        <div class="card shadow mb-4" id="userGroupCard">
                            <div class="card-header py-3">
                                <h6 class="m-0 font-weight-bold text-primary">User Groups</h6>
                            </div>
                            <div class="card-body" id="userGroupsCardBody">
                                @for (int i = 0; i < Model.UserGroups.Count; i++)
                                {
                                    <div class="form-check" id="userGroups">
                                        @if (Model.SelectedUserGroupIds.Count != 0)
                                        {
                                            if (Model.SelectedUserGroupIds.FindIndex(sg => sg == Model.UserGroups[i].AccessGroupId) != -1)
                                            {
                                                <input class="form-check-input" type="checkbox" id="ug-@Model.UserGroups[i].AccessGroupId" name="userGroup" value="@Model.UserGroups[i].AccessGroupId" onchange="onUserGroupChange(this.value)" checked />
                                            }
                                            else
                                            {
                                                <input class="form-check-input" type="checkbox" id="ug-@Model.UserGroups[i].AccessGroupId" name="userGroup" value="@Model.UserGroups[i].AccessGroupId" onchange="onUserGroupChange(this.value)" />
                                            }
                                        }
                                        else
                                        {
                                            <input class="form-check-input" type="checkbox" id="ug-@Model.UserGroups[i].AccessGroupId" name="userGroup" value="@Model.UserGroups[i].AccessGroupId" onchange="onUserGroupChange(this.value)" />
                                        }
                                        <label class="form-check-label">@Model.UserGroups[i].AccessGroupName</label>
                                    </div>
                                    <hr />
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="card shadow mb-4" id="userRoleCard">
                            <div class="card-header py-3">
                                <h6 class="m-0 font-weight-bold text-primary">User Roles</h6>
                            </div>
                            <div class="card-body" id="userRolesCardBody">
                                @for (int i = 0; i < Model.UserRoles.Count; i++)
                                {
                                    <div class="form-check" id="userRoles">
                                        @if (Model.SelectedUserRoleIds.Count != 0)
                                        {
                                            if (Model.SelectedUserRoleIds.FindIndex(sr => sr == Model.UserRoles[i].Id) != -1)
                                            {
                                                <input class="form-check-input" type="checkbox" id="ur-@Model.UserRoles[i].Id" name="userRole" value="@Model.UserRoles[i].Id" onchange="onUserRoleChange(this.value)" checked />
                                            }
                                            else
                                            {
                                                <input class="form-check-input" type="checkbox" id="ur-@Model.UserRoles[i].Id" name="userRole" value="@Model.UserRoles[i].Id" onchange="onUserRoleChange(this.value)" />
                                            }
                                        }
                                        else
                                        {
                                            <input class="form-check-input" type="checkbox" id="ur-@Model.UserRoles[i].Id" name="userRole" value="@Model.UserRoles[i].Id" onchange="onUserRoleChange(this.value)" />
                                        }
                                        <label class="form-check-label">@Model.UserRoles[i].Name</label>
                                    </div>
                                    <hr />
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="card shadow mb-4" id="userClaimCard">
                            <div class="card-header py-3">
                                <h6 class="m-0 font-weight-bold text-primary">User Claims</h6>
                            </div>
                            @if (Model.SelectedUserRoleIds.Count != 0)
                            {
                                <div class="card-body" id="userClaimsCardBody">
                                    @for (int i = 0; i < Model.Claims.Count; i++)
                                    {
                                        <div class="form-check" id="userClaims">
                                            @if (Model.SelectedUserClaimIds.Count != 0)
                                            {
                                                if (Model.SelectedUserClaimIds.FindIndex(sc => sc == Model.Claims[i].ClaimId) != -1)
                                                {
                                                    <input class="form-check-input" type="checkbox" id="cl-@Model.Claims[i].ClaimId" name="userClaim" value="@Model.Claims[i].ClaimId" checked />
                                                }
                                                else
                                                {
                                                    <input class="form-check-input" type="checkbox" id="cl-@Model.Claims[i].ClaimId" name="userClaim" value="@Model.Claims[i].ClaimId" />
                                                }
                                            }
                                            else
                                            {
                                                <input class="form-check-input" type="checkbox" id="cl-@Model.Claims[i].ClaimId" name="userClaim" value="@Model.Claims[i].ClaimId" />
                                            }
                                            <label class="form-check-label">@Model.Claims[i].ClaimName</label>
                                        </div>
                                        <hr />
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="card-body" id="userClaimsCardBody" hidden>
                                    @for (int i = 0; i < Model.Claims.Count; i++)
                                    {
                                        <div class="form-check" id="userClaims">
                                            @if (Model.SelectedUserClaimIds.Count != 0)
                                            {
                                                if (Model.SelectedUserClaimIds.FindIndex(sc => sc == Model.Claims[i].ClaimId) != -1)
                                                {
                                                    <input class="form-check-input" type="checkbox" id="cl-@Model.Claims[i].ClaimId" name="userClaim" value="@Model.Claims[i].ClaimId" checked />
                                                }
                                                else
                                                {
                                                    <input class="form-check-input" type="checkbox" id="cl-@Model.Claims[i].ClaimId" name="userClaim" value="@Model.Claims[i].ClaimId" />
                                                }
                                            }
                                            else
                                            {
                                                <input class="form-check-input" type="checkbox" id="cl-@Model.Claims[i].ClaimId" name="userClaim" value="@Model.Claims[i].ClaimId" />
                                            }
                                            <label class="form-check-label">@Model.Claims[i].ClaimName</label>
                                        </div>
                                        <hr />
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <hr />
                <div class="form-group float-right">
                    <button class="btn btn-primary" type="submit" id="userClaimSubmitBtn">Save</button>
                    <button class="btn btn-light" type="button" id="userClaimClearBtn" onclick="clearSemesterSubjectForm()">Clear Changes</button>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script>
        var userId;
        var selectedUserGroups = [];
        var selectedUserRoles = [];

        $(document).ready(function () {
            userId = window.location.pathname.toString().split('/')[3];
        });

        function onUserGroupChange(groupVal) {
            selectedUserGroups = [];

            $("input:checkbox[name=userGroup]:checked").each(function () {
                selectedUserGroups.push($(this).val());
            });

            var postData = {
                SelectedUserGroupIds: selectedUserGroups
            };

            if (selectedUserGroups.length != 0) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetUserRolesByAccessGroups", "SA")',
                    data: postData,
                    success: function (data) {
                        $("#userRolesCardBody").html("");
                        var dynamicContent = ``;

                        for (var i = 0; i < data.length; i++) {
                            dynamicContent = dynamicContent + `<div class="form-check" id="userRoles">`
                                + `<input class="form-check-input" type="checkbox" id="ur-` + data[i].Id + `" name="userRole" value="` + data[i].Id + `" onchange="onUserRoleChange(this.value)" />`
                                + `<label class="form-check-label">` + data[i].Name + `</label>`
                                + `</div><hr />`;
                        }

                        $("#userRolesCardBody").html(dynamicContent);
                    }
                })
            }
            else {
                $("#userRolesCardBody").html("");
            }
        }

        function onUserRoleChange(roleVal) {
            selectedUserRoles = [];

            $("input:checkbox[name=userRole]:checked").each(function () {
                selectedUserRoles.push($(this).val());
            });

            if (selectedUserRoles.length != 0) {
                $("#userClaimsCardBody").removeAttr('hidden');
            }
            else {
                $("#userClaimsCardBody").attr('hidden', true);
            }
        }

        function SubmitUserClaimForm(form) {
            $(form).removeData("validator");
            $(form).removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);

            var selectedUserGroupIds = [];
            var selectedUserRoleIds = [];
            var selectedUserClaimIds = [];

            $("input:checkbox[name=userGroup]:checked").each(function () {
                selectedUserGroupIds.push($(this).val());
            });

            $("input:checkbox[name=userRole]:checked").each(function () {
                selectedUserRoleIds.push($(this).val());
            });

            $("input:checkbox[name=userClaim]:checked").each(function () {
                selectedUserClaimIds.push($(this).val());
            });

            if ($(form).valid()) {
                $("#loader").show();
                var fd = new FormData();

                $.each($(form).serializeArray(), function (key, input) {
                    fd.append(input.name, input.value);
                });

                fd.delete("passingUserGroupIds");
                fd.delete("passingUserRoleIds");
                fd.delete("passingUserClaimIds");

                fd.append("passingUserGroupIds", JSON.stringify(selectedUserGroupIds));
                fd.append("passingUserRoleIds", JSON.stringify(selectedUserRoleIds));
                fd.append("passingUserClaimIds", JSON.stringify(selectedUserClaimIds));

                $.ajax({
                    type: "POST",
                    url: form.action,
                    data: fd,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        $("#loader").hide();
                        if (data.success) {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            })
                        }
                        else {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "error"
                            })
                        }
                    }
                });
            }
            return false;
        }

        function clearSemesterSubjectForm() {
            window.location.reload();
        }
    </script>
}