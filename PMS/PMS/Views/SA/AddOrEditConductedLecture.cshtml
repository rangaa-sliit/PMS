@*Developed By:- Ranga Athapaththu
Developed On:- 2022/10/27*@

@model PMS.Models.ConductedLectures

@{
    ViewBag.Title = "AddOrEditConductedLecture";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-2 mb-0">
    <div class="col-12">
        <ol class="breadcrumb ml-2 mr-2 pt-2 pb-0 mb-2" id="breadCrumbWrapper">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "SA")">Home</a></li>
        </ol>
    </div>
</div>
<hr class="ml-2 mr-2 mt-0 mb-2" />
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800" id="aeConductedLectureMainTitle"></h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary" id="aeConductedLectureCardTitle"></h6>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("AddOrEditConductedLecture", "SA", FormMethod.Post, new { onsubmit = "return SubmitConductedLectureForm(this)", @id = "conductedLectureForm", autocomplete = "off" }))
            {
                <div class="row">
                    <div class="col-6">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.CLId)
                        <div class="form-group row">
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.ActualLectureDate, "Lecture Date: ", new { @class = "required" })
                            </div>
                            <div class="col-sm-9">
                                @Html.EditorFor(model => model.ActualLectureDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "actualLectureDate", oninput = "onLectureDateInput()" } })
                                @Html.ValidationMessageFor(model => model.ActualLectureDate)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.ActualFromTime, "Lecture Started Time: ", new { @class = "required" })
                            </div>
                            <div class="col-sm-9">
                                @Html.EditorFor(model => model.ActualFromTime, new { htmlAttributes = new { @class = "form-control", @type = "time", @id = "actualLectureStartedTime", oninput = "onLectureStartTimeInput()" } })
                                @Html.ValidationMessageFor(model => model.ActualFromTime)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.ActualToTime, "Lecture Ended Time: ", new { @class = "required" })
                            </div>
                            <div class="col-sm-9">
                                @Html.EditorFor(model => model.ActualToTime, new { htmlAttributes = new { @class = "form-control", @type = "time", @id = "actualLectureEndedTime", oninput = "onLectureEndTimeInput()" } })
                                @Html.ValidationMessageFor(model => model.ActualToTime)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.ActualLocationId, "Location: ", new { @class = "required" })
                            </div>
                            <div class="col-sm-9">
                                @Html.DropDownListFor(model => model.ActualLocationId, (IEnumerable<SelectListItem>)ViewBag.lectureHallsList, new { @class = "form-control", @id = "lectureHallsList", onchange = "onLectureHallChange(this.value)" })
                                @Html.ValidationMessageFor(model => model.ActualLocationId)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.CampusId, "Campus: ", new { @class = "required" })
                            </div>
                            <div class="col-sm-9">
                                @Html.DropDownListFor(model => model.CampusId, (IEnumerable<SelectListItem>)ViewBag.campusList, new { @class = "form-control", @id = "campusList", onchange = "onCampusChange(this.value)" })
                                @Html.ValidationMessageFor(model => model.CampusId)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.StudentAttendanceSheetLocation, "Student Attendance Sheet: ", new { @class = "required" })
                            </div>
                            <div class="col-sm-5 form-inline">
                                <input type="file" name="postedFile" id="studentAttendanceSheet" oninput="onStudentAttendanceSheetInput()">
                                <a href="javascript:viewUploadedFile('@ViewBag.uploadedFileName')">@ViewBag.uploadedFileName</a>
                                <small class="form-text text-danger">-- Only Images & PDF Files are supported --</small>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.Comment, "Comment: ")
                            </div>
                            <div class="col-sm-9">
                                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control", @id = "comment", oninput = "onCommentInput()" } })
                                @Html.ValidationMessageFor(model => model.Comment)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.IsActive, "Status: ")
                            </div>
                            <div class="col-sm-9">
                                @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>
                                {
                                    new SelectListItem{ Text = "Active", Value = "true" },
                                    new SelectListItem{ Text = "Inactive", Value = "false" }
                                }, new { @class = "form-control", @id = "conductedLectureStatusList", onchange = "onConductedLectureStatusChange(this.value)" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            <button class="btn btn-primary" type="submit" id="conductedLectureSubmitBtn">Save</button>
                            <button class="btn btn-light" type="button" id="conductedLectureClearBtn" onclick="clearConductedLectureForm()">Clear Changes</button>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="card shadow mb-4">
                            <div class="card-header">
                                <h6 class="m-0 font-weight-bold text-primary">Timetable Record Details</h6>
                            </div>
                            <div class="card-body">
                                <div class="form-group row">
                                    <div class="col-sm-3">
                                        <label>Subject: </label>
                                    </div>
                                    <div class="col-sm-9">
                                        <label class="text-dark">@ViewBag.semesterTimetableRecord.SubjectName</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-3">
                                        <label>Lecture Date: </label>
                                    </div>
                                    <div class="col-sm-9">
                                        <label class="text-dark">@ViewBag.semesterTimetableRecord.LectureDate</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-3">
                                        <label>Lecture Start Time: </label>
                                    </div>
                                    <div class="col-sm-9">
                                        <label class="text-dark">@ViewBag.semesterTimetableRecord.FromTime</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-3">
                                        <label>Lecture End Time: </label>
                                    </div>
                                    <div class="col-sm-9">
                                        <label class="text-dark">@ViewBag.semesterTimetableRecord.ToTime</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-3">
                                        <label>Location: </label>
                                    </div>
                                    <div class="col-sm-9">
                                        <label class="text-dark">@ViewBag.semesterTimetableRecord.Location</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-3">
                                        <label>Lecture Type: </label>
                                    </div>
                                    <div class="col-sm-9">
                                        <label class="text-dark">@ViewBag.semesterTimetableRecord.LectureTypeName</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-3">
                                        <label>Student Batches: </label>
                                    </div>
                                    <div class="col-sm-9">
                                        <label class="text-dark">@ViewBag.semesterTimetableRecord.StudentBatches</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script>
        var operation;
        var timetableId;
        var conductedLectureId;
        var breadcumText = ``;

        $(function () {
            $("#lectureHallsList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Location --"
                }
            });

            $("#campusList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Campus --"
                }
            });
        });

        $(document).ready(function () {
            timetableId = window.location.pathname.toString().split('/')[3];
            conductedLectureId = window.location.pathname.toString().split('/')[4];
            operation = window.location.pathname.toString().split('/')[5];

            
            if (operation != undefined) {
                $("#conductedLectureSubmitBtn").prop("disabled", true);
                $("#conductedLectureClearBtn").prop("disabled", true);

                if (operation == "Edit") {
                    $("#aeConductedLectureMainTitle").html("Edit Conducted Lecture Record");
                    $("#aeConductedLectureCardTitle").html("Edit Conducted Lecture Record");
                    breadcumText += `<li class="breadcrumb-item active">Edit Conducted Lecture Record</li>`;
                    $("#breadCrumbWrapper").append(breadcumText);
                }
                else {
                    $("#aeConductedLectureMainTitle").html("View Conducted Lecture Record");
                    $("#aeConductedLectureCardTitle").html("View Conducted Lecture Record");
                    breadcumText += `<li class="breadcrumb-item active">View Conducted Lecture Record</li>`;
                    $("#breadCrumbWrapper").append(breadcumText);
                    $("#semesterSubjectList").prop("disabled", true);
                    $("#lectureDate").prop("disabled", true);
                    $("#lectureStartTime").prop("disabled", true);
                    $("#lectureEndTime").prop("disabled", true);
                    $("#lectureHallsList").prop("disabled", true);
                    $("#lectureTypesList").prop("disabled", true);
                    $("#lecturersList").prop("disabled", true);
                    $("#studentBatches").prop("disabled", true);
                    $("#semesterTimetableStatusList").prop("disabled", true);
                }
            }
            else {
                $("#aeConductedLectureMainTitle").html("Add Conducted Lecture Record");
                $("#aeConductedLectureCardTitle").html("Add Conducted Lecture Record");

                breadcumText = `<li class="breadcrumb-item"><a href="@Url.Action("ManageLectureSessions", "SA")">Manage Lecture Sessions</a></li>`
                    + `<li class="breadcrumb-item active">Add Conducted Lecture Record</li>`;

                $("#breadCrumbWrapper").append(breadcumText);
                $("#actualLectureDate").val("");
                $("#actualLectureStartedTime").val("");
                $("#actualLectureEndedTime").val("");
                $("#comment").val("");
                $("#conductedLectureStatusList").val("true");
                $("#lectureHallsList").val(null).change();
                $("#campusList").val(null).change();
            }
        })

        function SubmitConductedLectureForm(form) {
            $(form).removeData("validator");
            $(form).removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);

            if ($(form).valid()) {
                var startTime = new Date($("#actualLectureDate").val() + " " + $("#actualLectureStartedTime").val());
                var endTime = new Date($("#actualLectureDate").val() + " " + $("#actualLectureEndedTime").val());

                if (startTime >= endTime) {
                    alert("Lecture Started Time should be less than Lecture Ended Time");
                }
                else {
                    if ($("#studentAttendanceSheet").val() != "") {
                        AddOrEditCL(form);
                    }
                    else {
                        alert("Student Attendance Sheet is required");
                    }
                }
            }
            return false;
        }

        function AddOrEditCL(form) {
            $("#loader").show();

            var fd = new FormData();
            var postedFile = $("#studentAttendanceSheet")[0].files[0];

            $.each($(form).serializeArray(), function (key, input) {
                fd.append(input.name, input.value);
            });

            fd.delete("TimetableId");

            fd.append("postedFile", postedFile);
            fd.append("TimetableId", parseInt(timetableId));

            $.ajax({
                type: "POST",
                url: form.action,
                data: fd,
                processData: false,
                contentType: false,
                success: function (data) {
                    $("#loader").hide();
                    if (data.success) {
                        if (operation == undefined) {
                            $("#actualLectureDate").val("");
                            $("#actualLectureStartedTime").val("");
                            $("#actualLectureEndedTime").val("");
                            $("#studentAttendanceSheet").val("");
                            $("#comment").val("");
                            $("#conductedLectureStatusList").val("true");
                            $("#lectureHallsList").val(null).change();
                            $("#campusList").val(null).change();
                        }

                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "success"
                        })
                    }
                    else {
                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "error"
                        })
                    }
                }
            });
        }

        function clearSemesterTimetableForm() {
            if (operation == undefined) {
                $("#actualLectureDate").val("");
                $("#actualLectureStartedTime").val("");
                $("#actualLectureEndedTime").val("");
                $("#studentAttendanceSheet").val("");
                $("#comment").val("");
                $("#conductedLectureStatusList").val("true");
                $("#lectureHallsList").val(null).change();
                $("#campusList").val(null).change();
            }
            else {
                window.location.reload();
            }
        }

        function onLectureDateInput() {
            $("#conductedLectureSubmitBtn").prop("disabled", false);
            $("#conductedLectureClearBtn").prop("disabled", false);
        }

        function onLectureStartTimeInput() {
            $("#conductedLectureSubmitBtn").prop("disabled", false);
            $("#conductedLectureClearBtn").prop("disabled", false);
        }

        function onLectureEndTimeInput() {
            $("#conductedLectureSubmitBtn").prop("disabled", false);
            $("#conductedLectureClearBtn").prop("disabled", false);
        }

        function onLectureHallChange(newHall) {
            $("#conductedLectureSubmitBtn").prop("disabled", false);
            $("#conductedLectureClearBtn").prop("disabled", false);
        }

        function onCampusChange(newCampus) {
            $("#conductedLectureSubmitBtn").prop("disabled", false);
            $("#conductedLectureClearBtn").prop("disabled", false);
        }

        function onStudentAttendanceSheetInput() {
            $("#conductedLectureSubmitBtn").prop("disabled", false);
            $("#conductedLectureClearBtn").prop("disabled", false);
        }

        function onCommentInput() {
            $("#conductedLectureSubmitBtn").prop("disabled", false);
            $("#conductedLectureClearBtn").prop("disabled", false);
        }

        function onConductedLectureStatusChange(newStatus) {
            $("#conductedLectureSubmitBtn").prop("disabled", false);
            $("#conductedLectureClearBtn").prop("disabled", false);
        }
    </script>
}