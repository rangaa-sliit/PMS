@*Developed By:- Ranga Athapaththu
Developed On:- 2022/09/05*@

@model PMS.Models.SemesterRegistration

@{
    ViewBag.Title = "AddOrEditSemesterRegistration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-2 mb-0">
    <div class="col-12">
        <ol class="breadcrumb ml-2 mr-2 pt-2 pb-0 mb-2" id="breadCrumbWrapper">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "SA")">Home</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("ManageSemesterRegistrations", "SA")">Manage Semester Registrations</a></li>
        </ol>
    </div>
</div>
<hr class="ml-2 mr-2 mt-0 mb-2" />
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800" id="aeSemesterRegistrationMainTitle"></h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary" id="aeSemesterRegistrationCardTitle"></h6>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("AddOrEditSemesterRegistration", "SA", FormMethod.Post, new { onsubmit = "return SubmitSemesterRegistrationForm(this)", @id = "semesterRegistrationForm", autocomplete = "off" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.SemesterId)
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.CalendarYear, "Calendar Year: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.CalendarYear, new { htmlAttributes = new { @class = "form-control", @type = "number", @placeholder = "-- Enter Calendar Year --", @id = "calendarYear", oninput = "onCalendarYearInput()" } })
                        @Html.ValidationMessageFor(model => model.CalendarYear)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.CalendarPeriodId, "Calendar Period: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.CalendarPeriodId, (IEnumerable<SelectListItem>)ViewBag.calendarPeriodList, new { @class = "form-control", @id = "calendarPeriodList", onchange = "onCalendarPeriodChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.CalendarPeriodId)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.IntakeYear, "Intake Year: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.IntakeYear, (IEnumerable<SelectListItem>)ViewBag.intakeYearList, new { @class = "form-control", @id = "intakeYearList", onchange = "onIntakeYearChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.IntakeYear)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.IntakeId, "Intake: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9" id="intakeListDiv">
                        @Html.DropDownListFor(model => model.IntakeId, (IEnumerable<SelectListItem>)ViewBag.intakeList, new { @class = "form-control", @id = "intakeList", onchange = "onIntakeChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.IntakeId)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.AcademicYear, "Academic Year: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.AcademicYear, new List<SelectListItem>
                        {
                            new SelectListItem{ Text = "-- Select Acadamic Year --", Value = "" },
                            new SelectListItem{ Text = "1", Value = "1" },
                            new SelectListItem{ Text = "2", Value = "2" },
                            new SelectListItem{ Text = "3", Value = "3" },
                            new SelectListItem{ Text = "4", Value = "4" }
                        }, new { @class = "form-control", @id = "academicYearList", onchange = "onAcademicYearChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.AcademicYear)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.AcademicSemester, "Academic Semester: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.AcademicSemester, new List<SelectListItem>
                        {
                            new SelectListItem{ Text = "-- Select Acadamic Semester --", Value = "" },
                            new SelectListItem{ Text = "1", Value = "1" },
                            new SelectListItem{ Text = "2", Value = "2" }
                        }, new { @class = "form-control", @id = "academicSemesterList", onchange = "onAcademicSemesterChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.AcademicSemester)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.FacultyId, "Faculty: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.FacultyId, (IEnumerable<SelectListItem>)ViewBag.facultyList, new { @class = "form-control", @id = "facultyList", onchange = "onFacultyChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.FacultyId)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.InstituteId, "Awarding Institute: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.InstituteId, (IEnumerable<SelectListItem>)ViewBag.instituteList, new { @class = "form-control", @id = "instituteList", onchange = "onInstituteChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.InstituteId)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.DegreeId, "Degree: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.DegreeId, (IEnumerable<SelectListItem>)ViewBag.degreeList, new { @class = "form-control", @id = "degreeList", onchange = "onDegreeChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.DegreeId)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.SpecializationId, "Specialization: ")
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.SpecializationId, (IEnumerable<SelectListItem>)ViewBag.specializationList, new { @class = "form-control", @id = "specializationList", onchange = "onSpecializationChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.SpecializationId)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.FromDate, "From Date: ")
                    </div>
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "srFromDate", oninput = "onSRFromDateInput()" } })
                        @Html.ValidationMessageFor(model => model.FromDate)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.ToDate, "To Date: ")
                    </div>
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "srToDate", oninput = "onSRToDateInput()" } })
                        @Html.ValidationMessageFor(model => model.ToDate)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.IsActive, "Status: ")
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>
                        {
                            new SelectListItem{ Text = "Active", Value = "true" },
                            new SelectListItem{ Text = "Inactive", Value = "false" }
                        }, new { @class = "form-control", @id = "semesterRegistrationStatusList", onchange = "onSemesterRegistrationStatusChange(this.value)" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <button class="btn btn-primary" type="submit" id="semesterRegistrationSubmitBtn">Save</button>
                    <button class="btn btn-light" type="button" id="semesterRegistrationClearBtn" onclick="clearSemesterRegistrationForm()">Clear Changes</button>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script>
        var operation;

        $(function () {
            $("#calendarPeriodList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Calendar Period --"
                }
            });

            $("#intakeYearList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Intake Year --"
                }
            });

            $("#intakeList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Intake --"
                }
            });

            $("#academicYearList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Academic Year --"
                }
            });

            $("#academicSemesterList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Academic Semester --"
                }
            });

            $("#facultyList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Faculty --"
                }
            });

            $("#instituteList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Awarding Institute --"
                }
            });

            $("#degreeList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Degree --"
                }
            });

            $("#specializationList").select2({
                theme: "bootstrap4"
            });
        });

        $(document).ready(function () {
            operation = window.location.pathname.toString().split('/')[4];

            if (operation != undefined) {
                $("#semesterRegistrationSubmitBtn").prop("disabled", true);
                $("#semesterRegistrationClearBtn").prop("disabled", true);
                if (operation == "Edit") {
                    $("#aeSemesterRegistrationMainTitle").html("Edit Semester Registration");
                    $("#aeSemesterRegistrationCardTitle").html("Edit Semester Registration");
                    $("#breadCrumbWrapper").append(`<li class="breadcrumb-item active">Edit Semester Registration</li>`);
                }
                else {
                    $("#aeSemesterRegistrationMainTitle").html("View Semester Registration");
                    $("#aeSemesterRegistrationCardTitle").html("View Semester Registration");
                    $("#breadCrumbWrapper").append(`<li class="breadcrumb-item active">View Semester Registration</li>`);
                    $("#calendarYear").prop("disabled", true);
                    $("#calendarPeriodList").prop("disabled", true);
                    $("#intakeYearList").prop("disabled", true);
                    $("#intakeList").prop("disabled", true);
                    $("#academicYearList").prop("disabled", true);
                    $("#academicSemesterList").prop("disabled", true);
                    $("#facultyList").prop("disabled", true);
                    $("#instituteList").prop("disabled", true);
                    $("#degreeList").prop("disabled", true);
                    $("#specializationList").prop("disabled", true);
                    $("#srFromDate").prop("disabled", true);
                    $("#srToDate").prop("disabled", true);
                    $("#semesterRegistrationStatusList").prop("disabled", true);
                }
            }
            else {
                $("#aeSemesterRegistrationMainTitle").html("Add Semester Registration");
                $("#aeSemesterRegistrationCardTitle").html("Add Semester Registration");
                $("#breadCrumbWrapper").append(`<li class="breadcrumb-item active">Add Semester Registration</li>`);
                $("#calendarYear").val("");
                //$("#calendarPeriodList").val("");
                //$("#intakeYearList").val("");
                //$("#intakeList").val("");
                //$("#academicYearList").val("");
                //$("#academicSemesterList").val("");
                //$("#facultyList").val("");
                //$("#instituteList").val("");
                //$("#degreeList").val("");
                $("#srFromDate").val("");
                $("#srToDate").val("");
                $("#semesterRegistrationStatusList").val("true");
                $("#calendarPeriodList").val(null).change();
                $("#intakeYearList").val(null).change();
                $("#intakeList").val(null).change();
                $("#academicYearList").val(null).change();
                $("#academicSemesterList").val(null).change();
                $("#facultyList").val(null).change();
                $("#instituteList").val(null).change();
                $("#degreeList").val(null).change();
                $("#specializationList").val(null).change();
            }
        })

        function SubmitSemesterRegistrationForm(form) {
            $(form).removeData("validator");
            $(form).removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);

            if ($(form).valid()) {
                if ($("#srFromDate").val() != "" && $("#srToDate").val() != "") {
                    var fromDate = new Date($("#srFromDate").val());
                    var toDate = new Date($("#srToDate").val());

                    if (toDate < fromDate) {
                        alert("Semester Registration To Date should be greater than Appointment From Date");
                    }
                    else {
                        AddOrEditSR(form);
                    }
                }
                else {
                    AddOrEditSR(form);
                }
            }
            return false;
        }

        function AddOrEditSR(form) {
            $("#loader").show();
            $.ajax({
                type: "POST",
                url: form.action,
                data: $(form).serialize(),
                success: function (data) {
                    $("#loader").hide();
                    if (data.success) {
                        if (operation == undefined) {
                            $("#calendarYear").val("");
                            //$("#calendarPeriodList").val("");
                            //$("#intakeYearList").val("");
                            //$("#intakeList").val("");
                            //$("#academicYearList").val("");
                            //$("#academicSemesterList").val("");
                            //$("#facultyList").val("");
                            //$("#instituteList").val("");
                            //$("#degreeList").val("");
                            $("#srFromDate").val("");
                            $("#srToDate").val("");
                            $("#semesterRegistrationStatusList").val("true");
                            $("#calendarPeriodList").val(null).change();
                            $("#intakeYearList").val(null).change();
                            $("#intakeList").val(null).change();
                            $("#academicYearList").val(null).change();
                            $("#academicSemesterList").val(null).change();
                            $("#facultyList").val(null).change();
                            $("#instituteList").val(null).change();
                            $("#degreeList").val(null).change();
                            $("#specializationList").val(null).change();
                        }

                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "success"
                        })
                    }
                    else {
                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "error"
                        })
                    }
                }
            });
        }

        function clearSemesterRegistrationForm() {
            if (operation == undefined) {
                $("#calendarYear").val("");
                //$("#calendarPeriodList").val("");
                //$("#intakeYearList").val("");
                //$("#intakeList").val("");
                //$("#academicYearList").val("");
                //$("#academicSemesterList").val("");
                //$("#facultyList").val("");
                //$("#instituteList").val("");
                //$("#degreeList").val("");
                $("#srFromDate").val("");
                $("#srToDate").val("");
                $("#semesterRegistrationStatusList").val("true");
                $("#calendarPeriodList").val(null).change();
                $("#intakeYearList").val(null).change();
                $("#intakeList").val(null).change();
                $("#academicYearList").val(null).change();
                $("#academicSemesterList").val(null).change();
                $("#facultyList").val(null).change();
                $("#instituteList").val(null).change();
                $("#degreeList").val(null).change();
                $("#specializationList").val(null).change();
            }
            else {
                window.location.reload();
            }
        }

        function onCalendarYearInput() {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);
        }

        function onCalendarPeriodChange(calendarPeriod) {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);
        }

        function onIntakeYearChange(intakeYear) {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetIntakesByIntakeYear", "SA")/' + intakeYear,
                success: function (response) {
                    $("#intakeList").find('option').not(':first').remove();
                    var dynamicContent = ``;

                    for (var i = 0; i < response.length; i++) {
                        dynamicContent = dynamicContent + `<option value="` + response[i].Value + `">` + response[i].Text + `</option>`;
                    }

                    $("#intakeList option:first").after(dynamicContent);
                }
            })
        }

        function onIntakeChange(intake) {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);
        }

        function onAcademicYearChange(acadamicYear) {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);
        }

        function onAcademicSemesterChange(acadamicSemester) {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);
        }

        function onFacultyChange(facultyId) {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);

            if ($("#instituteList :selected").val() != "") {
                loadDegrees();
            }
            else {
                $("#degreeList").find('option').not(':first').remove();
            }
            $("#degreeList").val(null).change();
            $("#specializationList").find('option').not(':first').remove();
            $("#specializationList").val(null).change();
        }

        function onInstituteChange(instituteId) {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);

            if ($("#facultyList :selected").val() != "") {
                loadDegrees();
            }
            else {
                $("#degreeList").find('option').not(':first').remove();
            }
            $("#degreeList").val(null).change();
            $("#specializationList").find('option').not(':first').remove();
            $("#specializationList").val(null).change();
        }

        function loadDegrees() {
            var facInsObj = {
                FacultyId: $("#facultyList :selected").val(),
                InstituteId: $("#instituteList :selected").val()
            };

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetDegreesByFacultyInstitute", "SA")',
                data: facInsObj,
                success: function (response) {
                    $("#degreeList").find('option').not(':first').remove();
                    var dynamicContent = ``;

                    for (var i = 0; i < response.length; i++) {
                        dynamicContent = dynamicContent + `<option value="` + response[i].Value + `">` + response[i].Text + `</option>`;
                    }

                    $("#degreeList option:first").after(dynamicContent);
                }
            })
        }

        function onDegreeChange(degreeId) {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetSpecializationsByDegree", "SA")/' + degreeId,
                success: function (response) {
                    $("#specializationList").find('option').not(':first').remove();
                    var dynamicContent = ``;

                    for (var i = 0; i < response.length; i++) {
                        dynamicContent = dynamicContent + `<option value="` + response[i].Value + `">` + response[i].Text + `</option>`;
                    }

                    $("#specializationList option:first").after(dynamicContent);
                }
            });
            $("#specializationList").val(null).change();
        }

        function onSpecializationChange(specialization) {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);
        }

        function onSRFromDateInput() {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);
        }

        function onSRToDateInput() {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);
        }

        function onSemesterRegistrationStatusChange(newStatus) {
            $("#semesterRegistrationSubmitBtn").prop("disabled", false);
            $("#semesterRegistrationClearBtn").prop("disabled", false);
        }
    </script>
}