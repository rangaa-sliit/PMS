@*Developed By:- Ranga Athapaththu
Developed On:- 2022/08/18*@

@model PMS.Models.SemesterSubjectLIC

@{
    ViewBag.Title = "AddOrEditSemesterSubjectLIC";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-2 mb-0">
    <div class="col-12">
        <ol class="breadcrumb ml-2 mr-2 pt-2 pb-0 mb-2" id="breadCrumbWrapper">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "SA")">Home</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("ManageSemesterRegistrations", "SA")">Manage Semester Registrations</a></li>
        </ol>
    </div>
</div>
<hr class="ml-2 mr-2 mt-0 mb-2" />
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800" id="aeSSLICMainTitle"></h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary" id="aeSSLICCardTitle"></h6>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("AddOrEditSemesterSubjectLIC", "SA", FormMethod.Post, new { onsubmit = "return SubmitSemesterSubjectLICForm(this)", @id = "semesterSubjectLICForm", autocomplete = "off" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.SSLICId)
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.SemesterSubjectId, "Semester Subject: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.SemesterSubjectId, (IEnumerable<SelectListItem>)ViewBag.semesterSubjectList, new { @class = "form-control", @id = "semesterSubjectList", onchange = "onSemesterSubjectChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.SemesterSubjectId)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.LICId, "LIC Name: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.LICId, (IEnumerable<SelectListItem>)ViewBag.usersList, new { @class = "form-control", @id = "licList", onchange = "onLICChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.LICId)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.IsActive, "Status: ")
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>
                        {
                            new SelectListItem{ Text = "Active", Value = "true" },
                            new SelectListItem{ Text = "Inactive", Value = "false" }
                        }, new { @class = "form-control", @id = "ssLICStatusList", onchange = "onSSLICStatusChange(this.value)" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <button class="btn btn-primary" type="submit" id="ssLICSubmitBtn">Save</button>
                    <button class="btn btn-light" type="button" id="ssLICClearBtn" onclick="clearSSLICForm()">Clear Changes</button>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script>
        var operation;
        var semesterRegistrationId;
        var semesterSubjectLICId;
        var breadcumText = ``;

        $(function () {
            $("#semesterSubjectList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select Semester Subject --"
                }
            });

            $("#licList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select LIC --"
                }
            });
        });

        $(document).ready(function () {
            semesterRegistrationId = window.location.pathname.toString().split('/')[3];
            operation = window.location.pathname.toString().split('/')[5];

            breadcumText = `<li class="breadcrumb-item"><a href="@Url.Action("ManageSemesterSubjectLICs", "SA")/` + semesterRegistrationId + `">Manage Semester Subject LICs</a></li>`;

            if (operation != undefined) {
                $("#ssLICSubmitBtn").prop("disabled", true);
                $("#ssLICClearBtn").prop("disabled", true);
                if (operation == "Edit") {
                    $("#aeSSLICMainTitle").html("Edit Semester Subject LIC");
                    $("#aeSSLICCardTitle").html("Edit Semester Subject LIC");
                    breadcumText += `<li class="breadcrumb-item active">Edit Semester Subject LIC</li>`;
                    $("#breadCrumbWrapper").append(breadcumText);
                }
                else {
                    $("#aeSSLICMainTitle").html("View Semester Subject LIC");
                    $("#aeSSLICCardTitle").html("View Semester Subject LIC");
                    breadcumText += `<li class="breadcrumb-item active">View Semester Subject LIC</li>`;
                    $("#breadCrumbWrapper").append(breadcumText);
                    $("#semesterSubjectList").prop("disabled", true);
                    $("#licList").prop("disabled", true);
                    $("#ssLICStatusList").prop("disabled", true);
                }
            }
            else {
                $("#aeSSLICMainTitle").html("Add Semester Subject LIC");
                $("#aeSSLICCardTitle").html("Add Semester Subject LIC");
                breadcumText += `<li class="breadcrumb-item active">Add Semester Subject LIC</li>`;
                $("#breadCrumbWrapper").append(breadcumText);
                $("#ssLICStatusList").val("true");
                $("#semesterSubjectList").val(null).change();
                $("#licList").val(null).change();
            }
        })

        function SubmitSemesterSubjectLICForm(form) {
            $(form).removeData("validator");
            $(form).removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);

            if ($(form).valid()) {
                $("#loader").show();
                $.ajax({
                    type: "POST",
                    url: form.action,
                    data: $(form).serialize(),
                    success: function (data) {
                        $("#loader").hide();
                        if (data.success) {
                            if (operation == undefined) {
                                $("#ssLICStatusList").val("true");
                                $("#semesterSubjectList").val(null).change();
                                $("#licList").val(null).change();
                            }

                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            })
                        }
                        else {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "error"
                            })
                        }
                    }
                });
            }
            return false;
        }

        function clearSSLICForm() {
            if (operation == undefined) {
                $("#ssLICStatusList").val("true");
                $("#semesterSubjectList").val(null).change();
                $("#licList").val(null).change();
            }
            else {
                window.location.reload();
            }
        }

        function onSemesterSubjectChange(newSemesterSubject) {
            $("#ssLICSubmitBtn").prop("disabled", false);
            $("#ssLICClearBtn").prop("disabled", false);
        }

        function onLICChange(newLIC) {
            $("#ssLICSubmitBtn").prop("disabled", false);
            $("#ssLICClearBtn").prop("disabled", false);
        }

        function onSSLICStatusChange(newStatus) {
            $("#ssLICSubmitBtn").prop("disabled", false);
            $("#ssLICClearBtn").prop("disabled", false);
        }
    </script>
}