@*Developed By:- Ranga Athapaththu
    Developed On:- 2022/11/24*@

@model PMS.Custom_Classes.UserCC

@{
    ViewBag.Title = "UserProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-2 mb-0">
    <div class="col-12">
        <ol class="breadcrumb ml-2 mr-2 pt-2 pb-0 mb-2" id="breadCrumbWrapper">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "SA")">Home</a></li>
            <li class="breadcrumb-item active">User profile</li>
        </ol>
    </div>
</div>
<hr class="ml-2 mr-2 mt-0 mb-2" />
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">User profile</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">User profile</h6>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("EditProfile", "SA", FormMethod.Post, new { onsubmit = "return SubmitUserForm(this)", @id = "userForm", autocomplete = "off" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.EmployeeNumber, "Employee Number: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.EmployeeNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Employee Number", @id = "employeeNumber", oninput = "onEmployeeNumberInput()" } })
                        @Html.ValidationMessageFor(model => model.EmployeeNumber)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.EmployeeTitle, "Employee Title: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.EmployeeTitle, (IEnumerable<SelectListItem>)ViewBag.titleList, new { @class = "form-control", @id = "titleList", onchange = "onTitleChange(this.value)" })
                        @Html.ValidationMessageFor(model => model.EmployeeTitle)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.FirstName, "First Name: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name", @id = "firstName", oninput = "onFirstNameInput()" } })
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.LastName, "Last Name: ", new { @class = "required" })
                    </div>
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name", @id = "lastName", oninput = "onLastNameInput()" } })
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.Email, "Email: ")
                    </div>
                    <div class="col-sm-9">
                        <span>@Model.Email</span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.PhoneNumber, "Contact Number: ")
                    </div>
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact Number", @id = "contactNumber", oninput = "onContactNumberInput()" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber)
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.postedPhoto, "User Photo: ")
                    </div>
                    <div class="col-sm-9">
                        <input type="file" name="postedPhoto" id="userPhoto" accept=".png,.jpg,.jpeg" oninput="onUserPhotoInput()">
                        <br />
                        <a href="javascript:viewUploadedUserPhoto('@Model.Id')">@Model.Photo_Name</a>
                        <small class="form-text text-danger">-- Only Image Files (.png, .jpg, .jpeg) are supported --</small>
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <button class="btn btn-primary" type="submit" id="userSubmitBtn">Save</button>
                    <button class="btn btn-light" type="button" id="userClearBtn" onclick="clearUserForm()">Clear Changes</button>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script>
        var operation;

        $(function () {
            $("#titleList").select2({
                theme: "bootstrap4",
                placeholder: {
                    id: '',
                    text: "-- Select User Title --"
                }
            });
        });

        function SubmitUserForm(form) {
            $(form).removeData("validator");
            $(form).removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);

            if ($(form).valid()) {
                $("#loader").show();

                var fd = new FormData();
                var postedPhoto = $("#userPhoto")[0].files[0];

                $.each($(form).serializeArray(), function (key, input) {
                    fd.append(input.name, input.value);
                });

                fd.delete("postedPhoto");

                fd.append("postedPhoto", postedPhoto);
                $.ajax({
                    type: "POST",
                    url: form.action,
                    data: fd,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        $("#loader").hide();
                        if (data.success) {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            })
                        }
                        else {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "error"
                            })
                        }
                    }
                });
            }
            return false;
        }

        function clearUserForm() {
            window.location.reload();
        }

        function onEmployeeNumberInput() {
            $("#userSubmitBtn").prop("disabled", false);
            $("#userClearBtn").prop("disabled", false);
        }

        function onTitleChange(newTitle) {
            $("#userSubmitBtn").prop("disabled", false);
            $("#userClearBtn").prop("disabled", false);
        }

        function onFirstNameInput() {
            $("#userSubmitBtn").prop("disabled", false);
            $("#userClearBtn").prop("disabled", false);
        }

        function onLastNameInput() {
            $("#userSubmitBtn").prop("disabled", false);
            $("#userClearBtn").prop("disabled", false);
        }

        function onContactNumberInput() {
            $("#userSubmitBtn").prop("disabled", false);
            $("#userClearBtn").prop("disabled", false);
        }

        function onUserPhotoInput() {
            $("#userSubmitBtn").prop("disabled", false);
            $("#userClearBtn").prop("disabled", false);
        }

        function viewUploadedUserPhoto(userId) {
            window.location.href = "@Url.Action("DownloadUserPhoto", "SA")/" + userId;
        }
    </script>
}